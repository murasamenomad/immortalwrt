#
# GitHub Actions: v9 - 调试版 (单线程详细日志)
#
name: Build ImmortalWrt for K2P (v9 - Debug)

on:
  workflow_dispatch:

env:
  REPO_URL: https://github.com/immortalwrt/immortalwrt
  REPO_BRANCH: master
  CONFIG_FILE: .config
  FIRMWARE_PATH: bin/targets/ramips/mt7621
  UPLOAD_FIRMWARE: true
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4

    - name: 初始化编译环境
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
        sudo -E apt-get update
        sudo -E apt-get install -y build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch python3 python2.7 unzip zlib1g-dev lib32gcc-s1 libc6-dev-i386 subversion flex uglifyjs git-core gcc-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler g++-multilib antlr3 gperf wget swig rsync libcrypt-dev python3-netifaces
        sudo -E apt-get autoremove --purge -y
        sudo -E apt-get clean

    - name: 克隆并准备 ImmortalWrt 源码与 Feeds
      id: prepare_source
      run: |
        git clone --depth 1 -b $REPO_BRANCH $REPO_URL openwrt
        cd openwrt
        echo "Adding custom feeds..."
        echo 'src-git-full openclash https://github.com/vernesong/OpenClash.git' >> feeds.conf.default
        echo 'src-git kenzok8 https://github.com/kenzok8/openwrt-packages' >> feeds.conf.default
        echo "Applying hardware modifications for 32MB K2P..."
        sed -i 's/reg = <0xa0000 0xf60000>;/reg = <0xa0000 0x1f60000>;/' target/linux/ramips/dts/mt7621_phicomm_k2p.dts
        sed -i 's/IMAGE_SIZE := 15744k/IMAGE_SIZE := 32160k/' target/linux/ramips/image/mt7621.mk
        
    - name: 更新 Feeds 并应用配置
      id: configure_build
      run: |
        export TERM=dumb
        cd openwrt
        ./scripts/feeds update -a
        ./scripts/feeds install -a
        cp "../$CONFIG_FILE" .config
        make defconfig

    - name: 下载软件包源码
      id: download_packages
      run: |
        cd openwrt
        make download -j$(nproc)

    - name: 开始编译固件 (使用单线程进行调试)
      id: build_firmware
      run: |
        cd openwrt
        echo "Building firmware with single thread for debugging..."
        make -j1 V=s

    - name: 打包固件与软件包
      if: success()
      run: |
        cd openwrt/${{ env.FIRMWARE_PATH }}
        echo "FIRMWARE_TAG=$(date +'%Y.%m.%d-%H%M')" >> $GITHUB_ENV
        zip -r immortalwrt-k2p-32m-${{ env.FIRMWARE_TAG }}.zip .

    - name: 上传构建产物
      if: success()
      uses: actions/upload-artifact@v4
      with:
        name: immortalwrt-k2p-32m-${{ env.FIRMWARE_TAG }}
        path: openwrt/${{ env.FIRMWARE_PATH }}/*.zip
