#
# GitHub Actions: 最终版 (官方源 + 内建工具索引)
#
name: Build ImmortalWrt for K2P (Final Build)

on:
  workflow_dispatch:

env:
  TZ: Asia/Shanghai
  REPO_URL: https://github.com/immortalwrt/immortalwrt.git
  REPO_BRANCH: master
  CONFIG_FILE: .config

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Initialize build environment
      run: |
        # 不再尝试安装外部的 apk-tools
        sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
        sudo -E apt-get update
        sudo -E apt-get install -y build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch python3 python2.7 unzip zlib1g-dev lib32gcc-s1 libc6-dev-i386 subversion flex uglifyjs git-core gcc-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler g++-multilib antlr3 gperf wget swig rsync libcrypt-dev python3-netifaces
        sudo -E apt-get autoremove --purge -y
        sudo -E apt-get clean

    - name: Clone ImmortalWrt source
      run: |
        git clone --depth 1 -b $REPO_BRANCH $REPO_URL openwrt

    - name: Cache downloaded sources (dl)
      uses: actions/cache@v4
      with:
        path: openwrt/dl
        key: ${{ runner.os }}-dl-${{ env.REPO_BRANCH }}-${{ hashFiles('openwrt/feeds.conf.default') }}

    - name: Update, install feeds and apply configuration
      run: |
        export TERM=dumb
        cd openwrt
        # 只更新和安装官方自带的 feeds
        ./scripts/feeds update -a
        ./scripts/feeds install -a
        cp ../.config .config
        # 应用硬件修改
        sed -i 's/reg = <0xa0000 0xf60000>;/reg = <0xa0000 0x1f60000>;/' target/linux/ramips/dts/mt7621_phicomm_k2p.dts
        sed -i 's/IMAGE_SIZE := 15744k/IMAGE_SIZE := 32160k/' target/linux/ramips/image/mt7621.mk
        make defconfig

    - name: Compile the firmware
      run: |
        cd openwrt
        make -j$(nproc) V=s 2>&1 | tee build.log || (cat build.log && exit 1)
        
    - name: Consolidate packages and generate master index
      run: |
        # 定义由编译系统自己生成的 apk 命令的路径
        APK_INDEX_TOOL=$(pwd)/openwrt/staging_dir/host/bin/apk
        
        # 创建一个统一的仓库目录
        UNIFIED_REPO_DIR=$(pwd)/openwrt/bin/unified_repo
        mkdir -p $UNIFIED_REPO_DIR
        
        # 将所有分散的 .apk 文件全部复制到这个统一的目录里
        echo "Consolidating all .apk packages into one directory..."
        find openwrt/bin/packages/mipsel_24kc -name "*.apk" -exec cp {} $UNIFIED_REPO_DIR/ \;
        find openwrt/bin/targets/ramips/mt7621/packages -name "*.apk" -exec cp {} $UNIFIED_REPO_DIR/ \;
        
        # 进入这个包含了所有软件包的目录
        cd $UNIFIED_REPO_DIR
        
        # 使用我们自己的 apk 工具，为当前目录的所有 .apk 文件生成总索引
        echo "Generating master index (APKINDEX.tar.gz)..."
        $APK_INDEX_TOOL index -o APKINDEX.tar.gz *.apk

    - name: Upload build artifacts
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: immortalwrt-build-artifacts-${{ github.run_id }}
        path: |
          openwrt/bin/targets/ramips/mt7621/immortalwrt-ramips-mt7621-phicomm_k2p-squashfs-sysupgrade.bin
          openwrt/bin/unified_repo/
          openwrt/build.log
          openwrt/.config
