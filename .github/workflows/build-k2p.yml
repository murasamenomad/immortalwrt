#
# GitHub Actions: 最终执行版
#
name: Build ImmortalWrt for K2P (Final Execution)

on:
  workflow_dispatch:

env:
  TZ: Asia/Shanghai
  REPO_URL: https://github.com/immortalwrt/immortalwrt.git
  REPO_BRANCH: master
  CONFIG_FILE: .config

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Initialize build environment
      run: |
        sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
        # --- 【最终修正】: 在 update 前，先添加 universe 仓库，确保能找到 apk-tools ---
        sudo add-apt-repository universe
        sudo -E apt-get update
        sudo -E apt-get install -y build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch python3 python2.7 unzip zlib1g-dev lib32gcc-s1 libc6-dev-i386 subversion flex uglifyjs git-core gcc-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler g++-multilib antlr3 gperf wget swig rsync libcrypt-dev python3-netifaces apk-tools
        sudo -E apt-get autoremove --purge -y
        sudo -E apt-get clean

    - name: Clone source and prepare packages
      run: |
        git clone --depth 1 -b $REPO_BRANCH $REPO_URL openwrt
        cd openwrt
        mkdir -p package/community
        # 使用"外科手术式"只获取我们需要的包，避免冲突
        git clone --depth 1 https://github.com/vernesong/OpenClash.git package/community/openclash
        git clone --depth 1 https://github.com/kenzok8/openwrt-packages.git kenzok8_tmp
        cp -r kenzok8_tmp/luci-app-samba4 package/community/
        cp -r kenzok8_tmp/samba4 package/community/
        cp -r kenzok8_tmp/luci-app-aria2 package/community/
        cp -r kenzok8_tmp/aria2 package/community/
        cp -r kenzok8_tmp/ariang-nginx package/community/
        rm -rf kenzok8_tmp
        cd ..

    - name: Cache downloaded sources (dl)
      uses: actions/cache@v4
      with:
        path: openwrt/dl
        key: ${{ runner.os }}-dl-${{ env.REPO_BRANCH }}-${{ hashFiles('openwrt/feeds.conf.default') }}

    - name: Update, install feeds and apply configuration
      run: |
        export TERM=dumb
        cd openwrt
        ./scripts/feeds update -a
        ./scripts/feeds install -a
        cp ../.config .config
        sed -i 's/reg = <0xa0000 0xf60000>;/reg = <0xa0000 0x1f60000>;/' target/linux/ramips/dts/mt7621_phicomm_k2p.dts
        sed -i 's/IMAGE_SIZE := 15744k/IMAGE_SIZE := 32160k/' target/linux/ramips/image/mt7621.mk
        make defconfig

    - name: Compile the firmware
      run: |
        cd openwrt
        make -j$(nproc) V=s 2>&1 | tee build.log || (cat build.log && exit 1)
        
    - name: Consolidate packages and generate master index
      run: |
        mkdir -p openwrt/bin/unified_repo/mipsel_24kc
        find openwrt/bin/packages/mipsel_24kc -name "*.apk" -exec cp {} openwrt/bin/unified_repo/mipsel_24kc/ \;
        find openwrt/bin/targets/ramips/mt7621/packages -name "*.apk" -exec cp {} openwrt/bin/unified_repo/mipsel_24kc/ \;
        cd openwrt/bin/unified_repo/mipsel_24kc
        apk index -o APKINDEX.tar.gz *.apk

    - name: Upload build artifacts
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: immortalwrt-build-artifacts-${{ github.run_id }}
        path: |
          openwrt/bin/targets/ramips/mt7621/immortalwrt-ramips-mt7621-phicomm_k2p-squashfs-sysupgrade.bin
          openwrt/bin/unified_repo/
          openwrt/build.log
          openwrt/.config
