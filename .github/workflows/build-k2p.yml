#
# GitHub Actions: v3 修正版 ImmortalWrt 固件编译流程
# For Phicomm K2P (32MB & USB3.0 Mod)
#
name: Build ImmortalWrt for K2P (v3 Fix)

on:
  workflow_dispatch:
    inputs:
      ssh_action:
        description: 'SSH to the build runner for debugging'
        required: false
        default: 'false'

env:
  REPO_URL: https://github.com/immortalwrt/immortalwrt
  REPO_BRANCH: master
  CONFIG_FILE: .config
  FIRMWARE_PATH: bin/targets/ramips/mt7621
  UPLOAD_FIRMWARE: true
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4

    - name: 初始化编译环境
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
        sudo -E apt-get -qq update
        # --- 【v3 修正】: 使用正确的包名 libcrypt-dev ---
        sudo -E apt-get -qq install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch python3 python2.7 unzip zlib1g-dev lib32gcc-s1 libc6-dev-i386 subversion flex uglifyjs git-core gcc-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler g++-multilib antlr3 gperf wget swig rsync libcrypt-dev python3-netifaces
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean

    - name: 克隆并准备 ImmortalWrt 源码
      id: prepare_source
      run: |
        git clone --depth 1 -b $REPO_BRANCH $REPO_URL openwrt
        cd openwrt
        echo "Adding OpenClash source feed..."
        echo 'src-git-full openclash https://github.com/vernesong/OpenClash.git' >> feeds.conf.default
        echo "Applying hardware modifications for 32MB K2P..."
        sed -i 's/reg = <0xa0000 0xf60000>;/reg = <0xa0000 0x1f60000>;/' target/linux/ramips/dts/mt7621_phicomm_k2p.dts
        sed -i 's/IMAGE_SIZE := 15744k/IMAGE_SIZE := 32160k/' target/linux/ramips/image/mt7621.mk
        
    - name: 更新 Feeds 并应用你的配置
      id: configure_build
      run: |
        cd openwrt
        echo "Updating and installing feeds..."
        ./scripts/feeds update -a
        ./scripts/feeds install -a
        echo "Copying custom .config..."
        cp "../<span class="math-inline">CONFIG\_FILE" \.config
echo "Expanding \.config silently and non\-interactively\.\.\."
make silentoldconfig
\- name\: 下载软件包源码
id\: download\_packages
run\: \|
cd openwrt
echo "Downloading all package sources\.\.\."
make download \-j</span>(nproc)

    - name: 开始编译固件
      id: build_firmware
      run: |
        cd openwrt
        echo "Building firmware with <span class="math-inline">\(nproc\) threads\.\.\."
make \-j</span>(nproc) V=s

    - name: 打包固件与软件包
      if: success()
      run: |
        cd openwrt/<span class="math-inline">\{\{ env\.FIRMWARE\_PATH \}\}
echo "FIRMWARE\_TAG\=</span>(date +'%Y.%m.%d-%H%M')" >> <span class="math-inline">GITHUB\_ENV
zip \-r immortalwrt\-k2p\-32m\-</span>{{ env.FIRMWARE_TAG }}.zip .

    - name: 上传构建产物
      if
