#
# GitHub Actions: v10 - 终极专业版 (带缓存和日志)
#
name: Build ImmortalWrt for K2P (v10 - Professional)

on:
  workflow_dispatch:

env:
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Initialize build environment
      run: |
        sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
        sudo -E apt-get update
        sudo -E apt-get install -y build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch python3 python2.7 unzip zlib1g-dev lib32gcc-s1 libc6-dev-i386 subversion flex uglifyjs git-core gcc-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler g++-multilib antlr3 gperf wget swig rsync libcrypt-dev python3-netifaces
        sudo -E apt-get autoremove --purge -y
        sudo -E apt-get clean

    - name: Clone ImmortalWrt source and prepare feeds
      run: |
        git clone https://github.com/immortalwrt/immortalwrt.git openwrt
        cd openwrt
        # 添加自定义源
        echo 'src-git-full openclash https://github.com/vernesong/OpenClash.git' >> feeds.conf.default
        echo 'src-git kenzok8 https://github.com/kenzok8/openwrt-packages' >> feeds.conf.default

    - name: Cache downloaded sources (dl)
      uses: actions/cache@v4
      with:
        path: openwrt/dl
        key: ${{ runner.os }}-dl-${{ hashFiles('openwrt/feeds.conf.default') }}

    - name: Update, install feeds and apply configuration
      run: |
        export TERM=dumb # 关键防错措施
        cd openwrt
        ./scripts/feeds update -a
        ./scripts/feeds install -a
        cp ../.config .config
        # 应用硬件修改
        sed -i 's/reg = <0xa0000 0xf60000>;/reg = <0xa0000 0x1f60000>;/' target/linux/ramips/dts/mt7621_phicomm_k2p.dts
        sed -i 's/IMAGE_SIZE := 15744k/IMAGE_SIZE := 32160k/' target/linux/ramips/image/mt7621.mk
        make defconfig

    - name: Compile the firmware (Debug Mode)
      id: compile
      run: |
        cd openwrt
        echo "Compiling with single thread for debugging, this will be slow..."
        # 使用单线程编译，并将所有输出保存到 build.log，同时在屏幕上显示
        make -j1 V=s 2>&1 | tee build.log
        # 如果make失败，脚本会在这里停止，但build.log已经被保存

    - name: Upload build artifacts
      # 无论编译成功与否，都上传日志和产物，方便分析
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: immortalwrt-build-artifacts-${{ github.run_id }}
        path: |
          openwrt/bin/targets/ramips/mt7621/
          openwrt/bin/packages/
          openwrt/build.log
          openwrt/.config
