#
# =================================================================
# GitHub Actions: 为你的 K2P 编译固件 (最终纯净版)
# 移除了所有不必要的步骤，这是最可靠的版本
# =================================================================
#
name: Build K2P Firmware (Final Purified Version)

on:
  workflow_dispatch:

env:
  CONFIG_FILE: .config
  FIRMWARE_PATH: bin/targets/ramips/mt7621
  UPLOAD_FIRMWARE: true
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-22.04
    steps:
      # 步骤 1: 检出你的修改分支
      # 这一步完成后，你的 .config 文件就已经在正确的位置了
      - name: Checkout My k2p-mod-24.10 Branch
        uses: actions/checkout@v4
        with:
          repository: ${{ github.repository }}
          ref: k2p-mod-24.10

      # 步骤 2: 初始化编译环境
      - name: Initialize build environment
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
          sudo -E apt-get -qq update
          sudo -E apt-get -qq install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch python3 python2.7 unzip zlib1g-dev lib32gcc-s1 libc6-dev-i386 subversion flex uglifyjs git-core gcc-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler g++-multilib antlr3 gperf wget swig rsync
          sudo -E apt-get -qq autoremove --purge
          sudo -E apt-get -qq clean

      # 步骤 3: 安装 Feeds 并添加第三方包
      # 【已移除多余的 cp 步骤】
      - name: Install Feeds and Packages
        run: |
          ./scripts/feeds update -a
          ./scripts/feeds install -a
          git clone --depth=1 https://github.com/vernesong/luci-app-openclash.git package/luci-app-openclash
          
      # 步骤 4: 下载源码
      # make 会自动找到根目录下的 .config 文件
      - name: Download package sources
        run: |
          make download -j$(nproc)

      # 步骤 5: 编译固件
      - name: Build the firmware
        run: |
          make -j$(nproc) V=s

      # 步骤 6: 打包固件
      - name: Package firmware
        if: env.UPLOAD_FIRMWARE == 'true' && !cancelled()
        run: |
          cd ${{ env.FIRMWARE_PATH }}
          rm -rf packages
          echo "FIRMWARE_TAG=$(date +'%Y.%m.%d-%H%M')-K2P-MOD" >> $GITHUB_ENV
          zip -r immortalwrt-k2p-${{ env.FIRMWARE_TAG }}.zip .

      # 步骤 7: 上传固件
      - name: Upload firmware artifact
        if: env.UPLOAD_FIRMWARE == 'true' && !cancelled()
        uses: actions/upload-artifact@v4
        with:
          name: immortalwrt-k2p-${{ env.FIRMWARE_TAG }}
          path: ${{ env.FIRMWARE_PATH }}/*.zip
