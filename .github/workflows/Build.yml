#
# GitHub Actions: Build ImmortalWrt Firmware for Phicomm K2P (32MB Mod)
#
name: Build ImmortalWrt for K2P

on:
  workflow_dispatch:
    inputs:
      ssh_action:
        description: 'SSH to the build runner to debug'
        required: false
        default: 'false'

env:
  REPO_URL: https://github.com/immortalwrt/immortalwrt
  REPO_BRANCH: master
  CONFIG_FILE: .config
  FIRMWARE_PATH: bin/targets/ramips/mt7621
  UPLOAD_FIRMWARE: true
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4
      # 此步骤执行后, 您仓库根目录下的 .config 文件已就位

    - name: Initialize Build Environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
        sudo -E apt-get -qq update
        sudo -E apt-get -qq install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch python3 python2.7 unzip zlib1g-dev lib32gcc-s1 libc6-dev-i386 subversion flex uglifyjs git-core gcc-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler g++-multilib antlr3 gperf wget swig rsync
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean

    - name: Build Firmware
      id: build
      run: |
        # 克隆源码
        git clone --depth 1 -b $REPO_BRANCH $REPO_URL openwrt

        # 进入源码目录 (后续所有操作都在此目录内)
        cd openwrt
        
        # --- 关键配置与修改 ---
        # 1. 应用您仓库中的 .config 文件
        #    注意：cp 和 ../$CONFIG_FILE 和 . 之间的空格
        if [ -f "../$CONFIG_FILE" ]; then
          echo "Custom .config found, copying..."
          cp "../$CONFIG_FILE" .config
        else
          echo "No custom .config file found, using default."
        fi

        # 2. 应用 K2P 32MB 硬件修改
        echo "Applying hardware modifications for 32MB K2P..."
        sed -i 's/reg = <0xa0000 0xf60000>;/reg = <0xa0000 0x1f60000>;/' target/linux/ramips/dts/mt7621_phicomm_k2p.dts
        sed -i 's/IMAGE_SIZE := 15744k/IMAGE_SIZE := 32160k/' target/linux/ramips/image/mt7621.mk
        
        # --- 开始编译流程 ---
        # 3. 更新并安装 Feeds
        echo "Updating and installing feeds..."
        ./scripts/feeds update -a
        ./scripts/feeds install -a
        
        # 4. 生成最终编译配置并下载源码
        echo "Generating final .config and downloading sources..."
        make defconfig
        make download -j$(nproc)
        
        # 5. 开始编译固件
        echo "Building firmware with $(nproc) threads..."
        make -j$(nproc) V=s

    - name: Package Firmware
      if: env.UPLOAD_FIRMWARE == 'true' && !cancelled()
      run: |
        cd openwrt/${{ env.FIRMWARE_PATH }}
        rm -rf packages
        echo "FIRMWARE_TAG=$(date +'%Y.%m.%d-%H%M')" >> $GITHUB_ENV
        zip -r immortalwrt-k2p-${{ env.FIRMWARE_TAG }}.zip .

    - name: Upload Firmware Artifact
      if: env.UPLOAD_FIRMWARE == 'true' && !cancelled()
      uses: actions/upload-artifact@v4
      with:
        name: immortalwrt-k2p-${{ env.FIRMWARE_TAG }}
        path: openwrt/${{ env.FIRMWARE_PATH }}/*.zip
