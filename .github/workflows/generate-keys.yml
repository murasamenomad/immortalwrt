#
# .github/workflows/generate-keys.yml
#
# 工作流名称
name: 'Generate ImmortalWrt Signing Keys (Authoritative)'

# 触发条件：允许从 GitHub Actions 页面手动触发
on:
  workflow_dispatch:

jobs:
  # 定义一个名为 'generate-keys' 的作业
  generate-keys:
    # 在最新的 Ubuntu 虚拟机上运行
    runs-on: ubuntu-latest

    # 为此作业中的所有 'run' 命令设置默认的工作目录
    # 这样后续步骤就不需要频繁地 'cd openwrt'
    defaults:
      run:
        working-directory: ./openwrt

    steps:
      # 步骤 1: 安装官方推荐的、完整的所有构建依赖
      - name: 'Install All Build Dependencies'
        # 覆盖默认工作目录，因为此时 './openwrt' 还不存在
        working-directory: .
        run: |
          sudo apt-get update
          # 采用报告中推荐的、最完整的依赖列表，确保万无一失
          sudo apt-get install -y \
            build-essential clang flex bison g++ gawk gcc-multilib g++-multilib \
            gettext git libncurses5-dev libssl-dev rsync \
            unzip zlib1g-dev file wget ccache libelf-dev

      # 步骤 2: 克隆 ImmortalWrt 源码 (使用稳定的 openwrt-24.10 分支)
      - name: 'Checkout ImmortalWrt Source'
        uses: actions/checkout@v4
        with:
          repository: 'immortalwrt/immortalwrt'
          ref: 'openwrt-24.10'
          path: 'openwrt'

      # 步骤 3: 准备完整的构建环境 (关键步骤)
      - name: 'Prepare Full Build Environment'
        run: |
          # 更新并安装所有官方 feeds
          ./scripts/feeds update -a
          ./scripts/feeds install -a
          # 基于默认配置生成一个完整的 .config 文件，这是非交互式构建的前提
          make defconfig

      # 步骤 4: 显式编译并安装所有主机工具 (关键修复)
      - name: 'Build and Install Host Tools (including usign)'
        run: |
          # 这是报告中指出的最关键修正
          # 我们不再尝试调用任何不确定的目标，而是构建整个工具链
          # 'make toolchain/install' 会作为依赖项，自动编译所有必需的主机工具 (包括 usign)，
          # 并将它们正确地安装到 'staging_dir/host/' 目录下。
          make toolchain/install -j$(nproc) V=s

      # 步骤 5: 验证 usign 是否已成功安装 (防御性编程)
      - name: 'Verify usign Installation'
        run: |
          echo "Verifying if usign exists..."
          if [ -f "./staging_dir/host/bin/usign" ]; then
            echo "SUCCESS: usign found at ./staging_dir/host/bin/usign"
            ls -l ./staging_dir/host/bin/usign
          else
            echo "ERROR: usign not found in ./staging_dir/host/bin/"
            exit 1
          fi

      # 步骤 6: 使用已验证存在的 usign 工具生成密钥对
      - name: 'Generate Key Pair'
        run: |
          # 此步骤现在必定成功
          ./staging_dir/host/bin/usign -G -p my_key.pub -s my_key.key
          echo "Signing keys (my_key.key, my_key.pub) generated successfully."

      # 步骤 7: 将生成的密钥文件作为产物上传
      - name: 'Upload Keys as Artifact'
        # upload-artifact 的路径是相对于工作空间根目录的
        working-directory: .
        uses: actions/upload-artifact@v4
        with:
          name: immortalwrt-signing-keys
          path: |
            openwrt/my_key.key
            openwrt/my_key.pub
