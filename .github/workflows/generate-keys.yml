# .github/workflows/generate-keys.yml
name: 'Generate ImmortalWrt Signing Keys'

on:
  workflow_dispatch:

jobs:
  generate-keys:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./openwrt

    steps:
      - name: 'Install Build Dependencies'
        working-directory: .
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            build-essential clang flex bison g++ gawk gcc-multilib g++-multilib \
            gettext git libncurses5-dev libssl-dev rsync \
            unzip zlib1g-dev file wget ccache libelf-dev python3

      - name: 'Checkout ImmortalWrt Source'
        uses: actions/checkout@v4
        with:
          repository: 'immortalwrt/immortalwrt'
          ref: 'openwrt-24.10'
          path: 'openwrt'

      - name: 'Prepare Build Environment'
        env:
          TERM: dumb  # 关键修复：防止终端交互问题
        run: |
          ./scripts/feeds update -a
          ./scripts/feeds install -a
          
          # 确保启用包签名配置
          echo "CONFIG_SIGNED_PACKAGES=y" >> .config
          echo "CONFIG_BUILDBOT=y" >> .config
          make defconfig

      - name: 'Build Essential Components'
        run: |
          # 构建工具链和必要组件
          make toolchain/install -j$(nproc)
          make -j$(nproc) tools/install

      - name: 'Generate Signing Keys'
        run: |
          # 直接调用usign生成密钥
          ./staging_dir/host/bin/usign -G -s ./key-build -p ./key-build.pub
          echo "签名密钥已生成："
          ls -l key-build*

      - name: 'Verify Keys'
        run: |
          if [ -f "key-build" ] && [ -f "key-build.pub" ]; then
            echo "✅ 密钥验证成功"
            ./staging_dir/host/bin/usign -V -p key-build.pub -m key-build
          else
            echo "❌ 密钥生成失败"
            exit 1
          fi

      - name: 'Upload Keys as Artifact'
        uses: actions/upload-artifact@v4
        with:
          name: immortalwrt-signing-keys
          path: |
            openwrt/key-build
            openwrt/key-build.pub
